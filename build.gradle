apply plugin: 'java'
buildscript {
    repositories {
        maven {
            url "https://plugins.gradle.org/m2/"
        }
    }
    dependencies {
        classpath "com.github.jengelman.gradle.plugins:shadow:1.2.4"
    }
}

apply plugin: "com.github.johnrengelman.shadow"

shadowJar {
    baseName = 'videostreaming'
    classifier = null
    version = null
}

sourceSets {
    main {
        java {
            srcDir 'slice/main/java'
        }
    }
}

repositories {
    mavenCentral()
    maven {
        url 'https://repo.zeroc.com/nexus/content/repositories/releases'
    }
}

dependencies {
    compile 'com.zeroc:ice:3.6.3'
    compile 'com.zeroc:icestorm:3.6.3'
}

task runIcestorm(type: Exec) {
    def db = new File("${projectDir}/db")
    db.mkdirs()
    commandLine "icebox", "--Ice.Config=config.icebox"
}

task compileSlice(type: Exec) {
    def sliceDir = new File("${projectDir}/slice/main/java")
    sliceDir.mkdirs()

    commandLine 'slice2java', '--output-dir', "${projectDir}/slice/main/java", "${projectDir}/src/main/java/portal/Portal.ice"

    standardOutput = new ByteArrayOutputStream()

    ext.output = {
        println standardOutput.toString()
    }

}

String getRuntimeClasspath() {
    sourceSets.main.runtimeClasspath.collect { it.absolutePath }.join(':')
}
